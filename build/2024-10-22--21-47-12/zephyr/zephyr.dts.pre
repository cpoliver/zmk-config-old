# 0 "/Users/cpoliver/code/keyboards/zmk/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano_v2.dts" 1






/dts-v1/;
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano.dtsi" 1






# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf52840_qiaa.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/common/mem.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf52840_qiaa.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf52840.dtsi" 1 3 4


# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/armv7-m.dtsi" 1 3 4


# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/armv7-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 4 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf52840.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/adc/nrf-adc.h" 1 3 4
# 10 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/adc/nrf-adc.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 153 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 154 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 184 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 185 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 188 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 191 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 11 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/adc/nrf-adc.h" 2 3 4
# 9 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 10 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 11 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/pinctrl/nrf-pinctrl.h" 1 3 4
# 12 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 13 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4

# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/common/freq.h" 1 3 4
# 15 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/override.dtsi" 1 3 4
# 16 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 2 3 4
# 24 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf_common.dtsi" 3 4
/ {
 pinctrl: pin-controller {




  compatible = "nordic,nrf-pinctrl";
 };

 rng_hci: entropy_bt_hci {
  compatible = "zephyr,bt-hci-entropy";
  status = "okay";
 };

 sw_pwm: sw-pwm {
  compatible = "nordic,nrf-sw-pwm";
  status = "disabled";
  generator = <&timer1>;
  clock-prescaler = <0>;
  #pwm-cells = <3>;
 };
};

&systick {




 status = "disabled";
};
# 5 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf52840.dtsi" 2 3 4

/ {
 chosen {
  zephyr,entropy = &rng;
  zephyr,flash-controller = &flash_controller;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m4f";
   reg = <0>;
   #address-cells = <1>;
   #size-cells = <1>;

   itm: itm@e0000000 {
    compatible = "arm,armv7m-itm";
    reg = <0xe0000000 0x1000>;
    swo-ref-frequency = <32000000>;
   };
  };
 };

 soc {
  ficr: ficr@10000000 {
   compatible = "nordic,nrf-ficr";
   reg = <0x10000000 0x1000>;
   status = "okay";
  };

  uicr: uicr@10001000 {
   compatible = "nordic,nrf-uicr";
   reg = <0x10001000 0x1000>;
   status = "okay";
  };

  sram0: memory@20000000 {
   compatible = "mmio-sram";
  };

  clock: clock@40000000 {
   compatible = "nordic,nrf-clock";
   reg = <0x40000000 0x1000>;
   interrupts = <0 1>;
   status = "okay";
  };

  power: power@40000000 {
   compatible = "nordic,nrf-power";
   reg = <0x40000000 0x1000>;
   interrupts = <0 1>;
   status = "okay";
   #address-cells = <1>;
   #size-cells = <1>;

   gpregret1: gpregret1@4000051c {
    #address-cells = <1>;
    #size-cells = <1>;
    compatible = "nordic,nrf-gpregret";
    reg = <0x4000051c 0x1>;
    status = "okay";
   };

   gpregret2: gpregret2@40000520 {
    #address-cells = <1>;
    #size-cells = <1>;
    compatible = "nordic,nrf-gpregret";
    reg = <0x40000520 0x1>;
    status = "okay";
   };
  };

  radio: radio@40001000 {
   compatible = "nordic,nrf-radio";
   reg = <0x40001000 0x1000>;
   interrupts = <1 1>;
   status = "okay";
   ieee802154-supported;
   ble-2mbps-supported;
   ble-coded-phy-supported;
   tx-high-power-supported;

   ieee802154: ieee802154 {
    compatible = "nordic,nrf-ieee802154";
    status = "disabled";
   };
  };

  uart0: uart@40002000 {


   compatible = "nordic,nrf-uarte";
   reg = <0x40002000 0x1000>;
   interrupts = <2 1>;
   status = "disabled";
  };

  i2c0: i2c@40003000 {







   compatible = "nordic,nrf-twim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003000 0x1000>;
   clock-frequency = <100000>;
   interrupts = <3 1>;
   easydma-maxcnt-bits = <16>;
   status = "disabled";
  };

  spi0: spi@40003000 {







   compatible = "nordic,nrf-spim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003000 0x1000>;
   interrupts = <3 1>;
   max-frequency = <((8) * 1000 * 1000)>;
   easydma-maxcnt-bits = <16>;
   status = "disabled";
  };

  i2c1: i2c@40004000 {







   compatible = "nordic,nrf-twim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40004000 0x1000>;
   clock-frequency = <100000>;
   interrupts = <4 1>;
   easydma-maxcnt-bits = <16>;
   status = "disabled";
  };

  spi1: spi@40004000 {







   compatible = "nordic,nrf-spim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40004000 0x1000>;
   interrupts = <4 1>;
   max-frequency = <((8) * 1000 * 1000)>;
   easydma-maxcnt-bits = <16>;
   status = "disabled";
  };

  nfct: nfct@40005000 {
   compatible = "nordic,nrf-nfct";
   reg = <0x40005000 0x1000>;
   interrupts = <5 1>;
   status = "okay";
  };

  gpiote: gpiote@40006000 {
   compatible = "nordic,nrf-gpiote";
   reg = <0x40006000 0x1000>;
   interrupts = <6 5>;
   status = "disabled";
  };

  adc: adc@40007000 {
   compatible = "nordic,nrf-saadc";
   reg = <0x40007000 0x1000>;
   interrupts = <7 1>;
   status = "disabled";
   #io-channel-cells = <1>;
  };

  timer0: timer@40008000 {
   compatible = "nordic,nrf-timer";
   status = "disabled";
   reg = <0x40008000 0x1000>;
   cc-num = <4>;
   max-bit-width = <32>;
   interrupts = <8 1>;
   prescaler = <0>;
  };

  timer1: timer@40009000 {
   compatible = "nordic,nrf-timer";
   status = "disabled";
   reg = <0x40009000 0x1000>;
   cc-num = <4>;
   max-bit-width = <32>;
   interrupts = <9 1>;
   prescaler = <0>;
  };

  timer2: timer@4000a000 {
   compatible = "nordic,nrf-timer";
   status = "disabled";
   reg = <0x4000a000 0x1000>;
   cc-num = <4>;
   max-bit-width = <32>;
   interrupts = <10 1>;
   prescaler = <0>;
  };

  rtc0: rtc@4000b000 {
   compatible = "nordic,nrf-rtc";
   reg = <0x4000b000 0x1000>;
   cc-num = <3>;
   interrupts = <11 1>;
   status = "disabled";
   clock-frequency = <32768>;
   prescaler = <1>;
  };

  temp: temp@4000c000 {
   compatible = "nordic,nrf-temp";
   reg = <0x4000c000 0x1000>;
   interrupts = <12 1>;
   status = "okay";
  };

  rng: random@4000d000 {
   compatible = "nordic,nrf-rng";
   reg = <0x4000d000 0x1000>;
   interrupts = <13 1>;
   status = "okay";
  };

  ecb: ecb@4000e000 {
   compatible = "nordic,nrf-ecb";
   reg = <0x4000e000 0x1000>;
   interrupts = <14 1>;
   status = "okay";
  };

  ccm: ccm@4000f000 {
   compatible = "nordic,nrf-ccm";
   reg = <0x4000f000 0x1000>;
   interrupts = <15 1>;
   length-field-length-8-bits;
   status = "okay";
  };

  wdt: wdt0: watchdog@40010000 {
   compatible = "nordic,nrf-wdt";
   reg = <0x40010000 0x1000>;
   interrupts = <16 1>;
   status = "okay";
  };

  rtc1: rtc@40011000 {
   compatible = "nordic,nrf-rtc";
   reg = <0x40011000 0x1000>;
   cc-num = <4>;
   interrupts = <17 1>;
   status = "disabled";
   clock-frequency = <32768>;
   prescaler = <1>;
  };

  qdec: qdec0: qdec@40012000 {
   compatible = "nordic,nrf-qdec";
   reg = <0x40012000 0x1000>;
   interrupts = <18 1>;
   status = "disabled";
  };

  comp: comparator@40013000 {






   compatible = "nordic,nrf-comp";
   reg = <0x40013000 0x1000>;
   interrupts = <19 1>;
   status = "disabled";
   #io-channel-cells = <1>;
  };

  egu0: swi0: egu@40014000 {
   compatible = "nordic,nrf-egu", "nordic,nrf-swi";
   reg = <0x40014000 0x1000>;
   interrupts = <20 1>;
   status = "okay";
  };

  egu1: swi1: egu@40015000 {
   compatible = "nordic,nrf-egu", "nordic,nrf-swi";
   reg = <0x40015000 0x1000>;
   interrupts = <21 1>;
   status = "okay";
  };

  egu2: swi2: egu@40016000 {
   compatible = "nordic,nrf-egu", "nordic,nrf-swi";
   reg = <0x40016000 0x1000>;
   interrupts = <22 1>;
   status = "okay";
  };

  egu3: swi3: egu@40017000 {
   compatible = "nordic,nrf-egu", "nordic,nrf-swi";
   reg = <0x40017000 0x1000>;
   interrupts = <23 1>;
   status = "okay";
  };

  egu4: swi4: egu@40018000 {
   compatible = "nordic,nrf-egu", "nordic,nrf-swi";
   reg = <0x40018000 0x1000>;
   interrupts = <24 1>;
   status = "okay";
  };

  egu5: swi5: egu@40019000 {
   compatible = "nordic,nrf-egu", "nordic,nrf-swi";
   reg = <0x40019000 0x1000>;
   interrupts = <25 1>;
   status = "okay";
  };

  timer3: timer@4001a000 {
   compatible = "nordic,nrf-timer";
   status = "disabled";
   reg = <0x4001a000 0x1000>;
   cc-num = <6>;
   max-bit-width = <32>;
   interrupts = <26 1>;
   prescaler = <0>;
  };

  timer4: timer@4001b000 {
   compatible = "nordic,nrf-timer";
   status = "disabled";
   reg = <0x4001b000 0x1000>;
   cc-num = <6>;
   max-bit-width = <32>;
   interrupts = <27 1>;
   prescaler = <0>;
  };

  pwm0: pwm@4001c000 {
   compatible = "nordic,nrf-pwm";
   reg = <0x4001c000 0x1000>;
   interrupts = <28 1>;
   status = "disabled";
   #pwm-cells = <3>;
  };

  pdm0: pdm@4001d000 {
   compatible = "nordic,nrf-pdm";
   reg = <0x4001d000 0x1000>;
   interrupts = <29 1>;
   status = "disabled";
  };

  acl: acl@4001e000 {
   compatible = "nordic,nrf-acl";
   reg = <0x4001e000 0x1000>;
   status = "okay";
  };

  flash_controller: flash-controller@4001e000 {
   compatible = "nordic,nrf52-flash-controller";
   reg = <0x4001e000 0x1000>;
   partial-erase;

   #address-cells = <1>;
   #size-cells = <1>;


   flash0: flash@0 {
    compatible = "soc-nv-flash";
    erase-block-size = <4096>;
    write-block-size = <4>;
   };
  };

  ppi: ppi@4001f000 {
   compatible = "nordic,nrf-ppi";
   reg = <0x4001f000 0x1000>;
   status = "okay";
  };

  mwu: mwu@40020000 {
   compatible = "nordic,nrf-mwu";
   reg = <0x40020000 0x1000>;
   status = "okay";
  };

  pwm1: pwm@40021000 {
   compatible = "nordic,nrf-pwm";
   reg = <0x40021000 0x1000>;
   interrupts = <33 1>;
   status = "disabled";
   #pwm-cells = <3>;
  };

  pwm2: pwm@40022000 {
   compatible = "nordic,nrf-pwm";
   reg = <0x40022000 0x1000>;
   interrupts = <34 1>;
   status = "disabled";
   #pwm-cells = <3>;
  };

  spi2: spi@40023000 {







   compatible = "nordic,nrf-spim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40023000 0x1000>;
   interrupts = <35 1>;
   max-frequency = <((8) * 1000 * 1000)>;
   easydma-maxcnt-bits = <16>;
   status = "disabled";
  };

  rtc2: rtc@40024000 {
   compatible = "nordic,nrf-rtc";
   reg = <0x40024000 0x1000>;
   cc-num = <4>;
   interrupts = <36 1>;
   status = "disabled";
   clock-frequency = <32768>;
   prescaler = <1>;
  };

  i2s0: i2s@40025000 {
   compatible = "nordic,nrf-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40025000 0x1000>;
   interrupts = <37 1>;
   status = "disabled";
  };

  usbd: usbd@40027000 {
   compatible = "nordic,nrf-usbd";
   reg = <0x40027000 0x1000>;
   interrupts = <39 1>;
   num-bidir-endpoints = <1>;
   num-in-endpoints = <7>;
   num-out-endpoints = <7>;
   num-isoin-endpoints = <1>;
   num-isoout-endpoints = <1>;
   status = "disabled";
  };

  uart1: uart@40028000 {
   compatible = "nordic,nrf-uarte";
   reg = <0x40028000 0x1000>;
   interrupts = <40 1>;
   status = "disabled";
  };

  qspi: qspi@40029000 {
   compatible = "nordic,nrf-qspi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40029000 0x1000>, <0x12000000 0x8000000>;
   reg-names = "qspi", "qspi_mm";
   interrupts = <41 1>;
   status = "disabled";
  };

  pwm3: pwm@4002d000 {
   compatible = "nordic,nrf-pwm";
   reg = <0x4002d000 0x1000>;
   interrupts = <45 1>;
   status = "disabled";
   #pwm-cells = <3>;
  };

  spi3: spi@4002f000 {
   compatible = "nordic,nrf-spim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x4002f000 0x1000>;
   interrupts = <47 1>;
   max-frequency = <((32) * 1000 * 1000)>;
   easydma-maxcnt-bits = <16>;
   rx-delay-supported;
   rx-delay = <2>;
   status = "disabled";
  };

  gpio0: gpio@50000000 {
   compatible = "nordic,nrf-gpio";
   gpio-controller;
   reg = <0x50000000 0x200
          0x50000500 0x300>;
   #gpio-cells = <2>;
   status = "disabled";
   port = <0>;
  };

  gpio1: gpio@50000300 {
   compatible = "nordic,nrf-gpio";
   gpio-controller;
   reg = <0x50000300 0x200
          0x50000800 0x300>;
   #gpio-cells = <2>;
   ngpios = <16>;
   status = "disabled";
   port = <1>;
  };

  cryptocell: crypto@5002a000 {
   compatible = "nordic,cryptocell", "arm,cryptocell-310";
   reg = <0x5002a000 0x1000>, <0x5002b000 0x1000>;
   reg-names = "wrapper", "core";
   interrupts = <42 1>;
   status = "disabled";
  };
 };
};

&nvic {
 arm,num-irq-priority-bits = <3>;
};
# 9 "/Users/cpoliver/code/keyboards/zmk/zephyr/dts/arm/nordic/nrf52840_qiaa.dtsi" 2 3 4

&flash0 {
 reg = <0x00000000 ((1024) * 1024)>;
};

&sram0 {
 reg = <0x20000000 ((256) * 1024)>;
};

/ {
 soc {
  compatible = "nordic,nrf52840-qiaa", "nordic,nrf52840",
        "nordic,nrf52", "simple-bus";
 };
};
# 8 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano.dtsi" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano-pinctrl.dtsi" 1





&pinctrl {
    uart0_default: uart0_default {
        group1 {
            psels = <((((((0) * 32U) + (8)) & 0x7FU) << 0U) | ((1U & 0xFFFFU) << 16U))>;
            bias-pull-up;
        };
        group2 {
            psels = <((((((0) * 32U) + (6)) & 0x7FU) << 0U) | ((0U & 0xFFFFU) << 16U))>;
        };
    };

    uart0_sleep: uart0_sleep {
        group1 {
            psels = <((((((0) * 32U) + (8)) & 0x7FU) << 0U) | ((1U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (6)) & 0x7FU) << 0U) | ((0U & 0xFFFFU) << 16U))>;
            low-power-enable;
        };
    };

    i2c0_default: i2c0_default {
        group1 {
            psels = <((((((0) * 32U) + (17)) & 0x7FU) << 0U) | ((12U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (20)) & 0x7FU) << 0U) | ((11U & 0xFFFFU) << 16U))>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <((((((0) * 32U) + (17)) & 0x7FU) << 0U) | ((12U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (20)) & 0x7FU) << 0U) | ((11U & 0xFFFFU) << 16U))>;
            low-power-enable;
        };
    };

    spi1_default: spi1_default {
        group1 {
            psels = <((((((1) * 32U) + (13)) & 0x7FU) << 0U) | ((4U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (10)) & 0x7FU) << 0U) | ((5U & 0xFFFFU) << 16U))>,
                <((((((1) * 32U) + (11)) & 0x7FU) << 0U) | ((6U & 0xFFFFU) << 16U))>;
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <((((((1) * 32U) + (13)) & 0x7FU) << 0U) | ((4U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (10)) & 0x7FU) << 0U) | ((5U & 0xFFFFU) << 16U))>,
                <((((((1) * 32U) + (11)) & 0x7FU) << 0U) | ((6U & 0xFFFFU) << 16U))>;
            low-power-enable;
        };
    };
};
# 9 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano.dtsi" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/arduino_pro_micro_pins.dtsi" 1






/ {
    pro_micro: connector {
        compatible = "arduino-pro-micro";
        #gpio-cells = <2>;
        gpio-map-mask = <0xffffffff 0xffffffc0>;
        gpio-map-pass-thru = <0 0x3f>;
        gpio-map
            = <0 0 &gpio0 8 0>
            , <1 0 &gpio0 6 0>
            , <2 0 &gpio0 17 0>
            , <3 0 &gpio0 20 0>
            , <4 0 &gpio0 22 0>
            , <5 0 &gpio0 24 0>
            , <6 0 &gpio1 0 0>
            , <7 0 &gpio0 11 0>
            , <8 0 &gpio1 4 0>
            , <9 0 &gpio1 6 0>
            , <10 0 &gpio0 9 0>
            , <16 0 &gpio0 10 0>
            , <14 0 &gpio1 11 0>
            , <15 0 &gpio1 13 0>
            , <18 0 &gpio1 15 0>
            , <19 0 &gpio0 2 0>
            , <20 0 &gpio0 29 0>
            , <21 0 &gpio0 31 0>
            ;
    };

    pro_micro_a: connector_a {
        compatible = "arduino-pro-micro";
        #gpio-cells = <2>;
        gpio-map-mask = <0xffffffff 0xffffffc0>;
        gpio-map-pass-thru = <0 0x3f>;
        gpio-map
            = <0 0 &gpio1 15 0>
            , <1 0 &gpio0 2 0>
            , <2 0 &gpio0 29 0>
            , <3 0 &gpio0 31 0>
            , <6 0 &gpio0 22 0>
            , <7 0 &gpio1 0 0>
            , <8 0 &gpio1 4 0>
            , <9 0 &gpio1 6 0>
            , <10 0 &gpio0 9 0>
            ;
    };
};

pro_micro_d: &pro_micro {};
pro_micro_i2c: &i2c0 {};
pro_micro_spi: &spi1 {};
pro_micro_serial: &uart0 {};
# 10 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano.dtsi" 2

/ {
    model = "nice!nano";
    compatible = "nice,nano";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
    };

    leds {
        compatible = "gpio-leds";
        blue_led: led_0 {
            gpios = <&gpio0 15 (0 << 0)>;
        };
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
};

&spi1 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
};

&uart0 {
    compatible = "nordic,nrf-uarte";
    current-speed = <115200>;
    pinctrl-0 = <&uart0_default>;
    pinctrl-1 = <&uart0_sleep>;
    pinctrl-names = "default", "sleep";
};

zephyr_udc0: &usbd {
    status = "okay";
};


&flash0 {




    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            reg = <0x00026000 0x000c6000>;
        };
# 98 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano.dtsi"
        storage_partition: partition@ec000 {
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };
};
# 9 "/Users/cpoliver/code/keyboards/zmk/app/boards/arm/nice_nano/nice_nano_v2.dts" 2

/ {
    chosen {
        zmk,battery = &vbatt;
    };


    EXT_POWER {
        compatible = "zmk,ext-power-generic";
        control-gpios = <&gpio0 13 (0 << 0)>;
        init-delay-ms = <50>;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
    };
};
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/splitkb_aurora_corne_left.overlay" 1






# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/splitkb_aurora_corne.dtsi" 1






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/matrix_transform.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/splitkb_aurora_corne.dtsi" 2

# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/5column.dtsi" 1 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/position_map.dtsi" 1 3 4
/ {
    layouts_foostan_corne_position_map: layouts_foostan_corne_position_map {
        compatible = "zmk,physical-layout-position-map";

        complete;
    };
};
# 2 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/5column.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/physical_layouts.dtsi" 1 3 4






/ {
    key_physical_attrs: key_physical_attrs {
        compatible = "zmk,key-physical-attrs";

        #key-cells = <7>;
    };
};
# 3 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/5column.dtsi" 2 3 4

/ {
    foostan_corne_5col_layout: foostan_corne_5col_layout {
        compatible = "zmk,physical-layout";
        display-name = "5 Column";

        keys
            = <&key_physical_attrs 100 100 0 37 0 0 0>
            , <&key_physical_attrs 100 100 100 12 0 0 0>
            , <&key_physical_attrs 100 100 200 0 0 0 0>
            , <&key_physical_attrs 100 100 300 12 0 0 0>
            , <&key_physical_attrs 100 100 400 24 0 0 0>
            , <&key_physical_attrs 100 100 700 24 0 0 0>
            , <&key_physical_attrs 100 100 800 12 0 0 0>
            , <&key_physical_attrs 100 100 900 0 0 0 0>
            , <&key_physical_attrs 100 100 1000 12 0 0 0>
            , <&key_physical_attrs 100 100 1100 37 0 0 0>
            , <&key_physical_attrs 100 100 0 137 0 0 0>
            , <&key_physical_attrs 100 100 100 112 0 0 0>
            , <&key_physical_attrs 100 100 200 100 0 0 0>
            , <&key_physical_attrs 100 100 300 112 0 0 0>
            , <&key_physical_attrs 100 100 400 124 0 0 0>
            , <&key_physical_attrs 100 100 700 124 0 0 0>
            , <&key_physical_attrs 100 100 800 112 0 0 0>
            , <&key_physical_attrs 100 100 900 100 0 0 0>
            , <&key_physical_attrs 100 100 1000 112 0 0 0>
            , <&key_physical_attrs 100 100 1100 137 0 0 0>
            , <&key_physical_attrs 100 100 0 237 0 0 0>
            , <&key_physical_attrs 100 100 100 212 0 0 0>
            , <&key_physical_attrs 100 100 200 200 0 0 0>
            , <&key_physical_attrs 100 100 300 212 0 0 0>
            , <&key_physical_attrs 100 100 400 224 0 0 0>
            , <&key_physical_attrs 100 100 700 224 0 0 0>
            , <&key_physical_attrs 100 100 800 212 0 0 0>
            , <&key_physical_attrs 100 100 900 200 0 0 0>
            , <&key_physical_attrs 100 100 1000 212 0 0 0>
            , <&key_physical_attrs 100 100 1100 237 0 0 0>
            , <&key_physical_attrs 100 100 250 312 0 0 0>
            , <&key_physical_attrs 100 100 350 312 1200 350 412>
            , <&key_physical_attrs 100 150 448 283 2400 448 433>
            , <&key_physical_attrs 100 150 652 283 (-2400) 752 433>
            , <&key_physical_attrs 100 100 750 312 (-1200) 850 412>
            , <&key_physical_attrs 100 100 850 312 0 0 0>
        ;
    };
};

&layouts_foostan_corne_position_map {
    foostan_corne_5col_posmap: five_column {
        physical-layout = <&foostan_corne_5col_layout>;
        positions
            = <36 0 1 2 3 4 5 6 7 8 9 37>
            , <38 10 11 12 13 14 15 16 17 18 19 39>
            , <40 20 21 22 23 24 25 26 27 28 29 41>
            , < 30 31 32 33 34 35 >;
    };
};
# 10 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/splitkb_aurora_corne.dtsi" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/6column.dtsi" 1 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/position_map.dtsi" 1 3 4
/ {
    layouts_foostan_corne_position_map: layouts_foostan_corne_position_map {
        compatible = "zmk,physical-layout-position-map";

        complete;
    };
};
# 2 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/6column.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/physical_layouts.dtsi" 1 3 4






/ {
    key_physical_attrs: key_physical_attrs {
        compatible = "zmk,key-physical-attrs";

        #key-cells = <7>;
    };
};
# 3 "/Users/cpoliver/code/keyboards/zmk/app/dts/layouts/foostan/corne/6column.dtsi" 2 3 4

/ {
    foostan_corne_6col_layout: foostan_corne_6col_layout {
        compatible = "zmk,physical-layout";
        display-name = "6 Column";

        keys
            = <&key_physical_attrs 100 100 0 37 0 0 0>
            , <&key_physical_attrs 100 100 100 37 0 0 0>
            , <&key_physical_attrs 100 100 200 12 0 0 0>
            , <&key_physical_attrs 100 100 300 0 0 0 0>
            , <&key_physical_attrs 100 100 400 12 0 0 0>
            , <&key_physical_attrs 100 100 500 24 0 0 0>
            , <&key_physical_attrs 100 100 800 24 0 0 0>
            , <&key_physical_attrs 100 100 900 12 0 0 0>
            , <&key_physical_attrs 100 100 1000 0 0 0 0>
            , <&key_physical_attrs 100 100 1100 12 0 0 0>
            , <&key_physical_attrs 100 100 1200 37 0 0 0>
            , <&key_physical_attrs 100 100 1300 37 0 0 0>
            , <&key_physical_attrs 100 100 0 137 0 0 0>
            , <&key_physical_attrs 100 100 100 137 0 0 0>
            , <&key_physical_attrs 100 100 200 112 0 0 0>
            , <&key_physical_attrs 100 100 300 100 0 0 0>
            , <&key_physical_attrs 100 100 400 112 0 0 0>
            , <&key_physical_attrs 100 100 500 124 0 0 0>
            , <&key_physical_attrs 100 100 800 124 0 0 0>
            , <&key_physical_attrs 100 100 900 112 0 0 0>
            , <&key_physical_attrs 100 100 1000 100 0 0 0>
            , <&key_physical_attrs 100 100 1100 112 0 0 0>
            , <&key_physical_attrs 100 100 1200 137 0 0 0>
            , <&key_physical_attrs 100 100 1300 137 0 0 0>
            , <&key_physical_attrs 100 100 0 237 0 0 0>
            , <&key_physical_attrs 100 100 100 237 0 0 0>
            , <&key_physical_attrs 100 100 200 212 0 0 0>
            , <&key_physical_attrs 100 100 300 200 0 0 0>
            , <&key_physical_attrs 100 100 400 212 0 0 0>
            , <&key_physical_attrs 100 100 500 224 0 0 0>
            , <&key_physical_attrs 100 100 800 224 0 0 0>
            , <&key_physical_attrs 100 100 900 212 0 0 0>
            , <&key_physical_attrs 100 100 1000 200 0 0 0>
            , <&key_physical_attrs 100 100 1100 212 0 0 0>
            , <&key_physical_attrs 100 100 1200 237 0 0 0>
            , <&key_physical_attrs 100 100 1300 237 0 0 0>
            , <&key_physical_attrs 100 100 350 312 0 0 0>
            , <&key_physical_attrs 100 100 450 312 1200 450 412>
            , <&key_physical_attrs 100 150 548 283 2400 548 433>
            , <&key_physical_attrs 100 150 752 283 (-2400) 852 433>
            , <&key_physical_attrs 100 100 850 312 (-1200) 950 412>
            , <&key_physical_attrs 100 100 950 312 0 0 0>
        ;
    };
};

&layouts_foostan_corne_position_map {
    foostan_corne_6col_posmap: six {
        physical-layout = <&foostan_corne_6col_layout>;
        positions
            = < 0 1 2 3 4 5 6 7 8 9 10 11>
            , <12 13 14 15 16 17 18 19 20 21 22 23>
            , <24 25 26 27 28 29 30 31 32 33 34 35>
            , < 36 37 38 39 40 41 >;
    };
};
# 11 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/splitkb_aurora_corne.dtsi" 2

&foostan_corne_6col_layout {
    transform = <&default_transform>;
};

&foostan_corne_5col_layout {
    transform = <&five_column_transform>;
};

/ {

    chosen {
        zephyr,display = &oled;
        zmk,physical-layout = &foostan_corne_6col_layout;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;




        map = <
(((0) << 8) + (0)) (((0) << 8) + (1)) (((0) << 8) + (2)) (((0) << 8) + (3)) (((0) << 8) + (4)) (((0) << 8) + (5)) (((0) << 8) + (6)) (((0) << 8) + (7)) (((0) << 8) + (8)) (((0) << 8) + (9)) (((0) << 8) + (10)) (((0) << 8) + (11))
(((1) << 8) + (0)) (((1) << 8) + (1)) (((1) << 8) + (2)) (((1) << 8) + (3)) (((1) << 8) + (4)) (((1) << 8) + (5)) (((1) << 8) + (6)) (((1) << 8) + (7)) (((1) << 8) + (8)) (((1) << 8) + (9)) (((1) << 8) + (10)) (((1) << 8) + (11))
(((2) << 8) + (0)) (((2) << 8) + (1)) (((2) << 8) + (2)) (((2) << 8) + (3)) (((2) << 8) + (4)) (((2) << 8) + (5)) (((2) << 8) + (6)) (((2) << 8) + (7)) (((2) << 8) + (8)) (((2) << 8) + (9)) (((2) << 8) + (10)) (((2) << 8) + (11))
                        (((3) << 8) + (3)) (((3) << 8) + (4)) (((3) << 8) + (5)) (((3) << 8) + (6)) (((3) << 8) + (7)) (((3) << 8) + (8))
        >;
    };

    five_column_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;




        map = <
(((0) << 8) + (1)) (((0) << 8) + (2)) (((0) << 8) + (3)) (((0) << 8) + (4)) (((0) << 8) + (5)) (((0) << 8) + (6)) (((0) << 8) + (7)) (((0) << 8) + (8)) (((0) << 8) + (9)) (((0) << 8) + (10))
(((1) << 8) + (1)) (((1) << 8) + (2)) (((1) << 8) + (3)) (((1) << 8) + (4)) (((1) << 8) + (5)) (((1) << 8) + (6)) (((1) << 8) + (7)) (((1) << 8) + (8)) (((1) << 8) + (9)) (((1) << 8) + (10))
(((2) << 8) + (1)) (((2) << 8) + (2)) (((2) << 8) + (3)) (((2) << 8) + (4)) (((2) << 8) + (5)) (((2) << 8) + (6)) (((2) << 8) + (7)) (((2) << 8) + (8)) (((2) << 8) + (9)) (((2) << 8) + (10))
                (((3) << 8) + (3)) (((3) << 8) + (4)) (((3) << 8) + (5)) (((3) << 8) + (6)) (((3) << 8) + (7)) (((3) << 8) + (8))
        >;
    };

    left_encoder: left_encoder {
        compatible = "alps,ec11";
        steps = <80>;
        status = "disabled";

        a-gpios = <&pro_micro 4 (1 << 4)>;
        b-gpios = <&pro_micro 5 (1 << 4)>;
    };

    right_encoder: right_encoder {
        compatible = "alps,ec11";
        steps = <80>;
        status = "disabled";

        a-gpios = <&pro_micro 19 (1 << 4)>;
        b-gpios = <&pro_micro 18 (1 << 4)>;
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };
};

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};
# 8 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/splitkb_aurora_corne_left.overlay" 2

/ {
    chosen {
        zmk,kscan = &kscan;
    };

    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";

        row-gpios
            = <&pro_micro 6 ((1 << 5) | (0 << 0))>
            , <&pro_micro 7 ((1 << 5) | (0 << 0))>
            , <&pro_micro 8 ((1 << 5) | (0 << 0))>
            , <&pro_micro 9 ((1 << 5) | (0 << 0))>
            ;

        col-gpios
            = <&pro_micro 16 (0 << 0)>
            , <&pro_micro 10 (0 << 0)>
            , <&pro_micro 14 (0 << 0)>
            , <&pro_micro 15 (0 << 0)>
            , <&pro_micro 18 (0 << 0)>
            , <&pro_micro 19 (0 << 0)>
            ;
    };
};

&left_encoder {
    status = "okay";
};
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/boards/nice_nano_v2.overlay" 1
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/include/zephyr/dt-bindings/led/led.h" 1 3 4
# 2 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/splitkb_aurora_corne/boards/nice_nano_v2.overlay" 2

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <((((((0) * 32U) + (6)) & 0x7FU) << 0U) | ((5U & 0xFFFFU) << 16U))>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <((((((0) * 32U) + (6)) & 0x7FU) << 0U) | ((5U & 0xFFFFU) << 16U))>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";


        reg = <0>;
        spi-max-frequency = <4000000>;


        chain-length = <10>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <2 1 3>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/nice_view_adapter/nice_view_adapter.overlay" 1
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/nice_view_adapter/boards/nice_nano_v2.overlay" 1






&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <((((((0) * 32U) + (20)) & 0x7FU) << 0U) | ((4U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (17)) & 0x7FU) << 0U) | ((5U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (25)) & 0x7FU) << 0U) | ((6U & 0xFFFFU) << 16U))>;
        };
    };
    spi0_sleep: spi0_sleep {
        group1 {
            psels = <((((((0) * 32U) + (20)) & 0x7FU) << 0U) | ((4U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (17)) & 0x7FU) << 0U) | ((5U & 0xFFFFU) << 16U))>,
                <((((((0) * 32U) + (25)) & 0x7FU) << 0U) | ((6U & 0xFFFFU) << 16U))>;
            low-power-enable;
        };
    };
};

nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&pro_micro 1 (0 << 0)>;
};

&pro_micro_i2c {
    status = "disabled";
};
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/app/boards/shields/nice_view/nice_view.overlay" 1






&nice_view_spi {
    status = "okay";
    nice_view: ls0xx@0 {
        compatible = "sharp,ls0xx";
        spi-max-frequency = <1000000>;
        reg = <0>;
        width = <160>;
        height = <68>;
    };
};

/ {
    chosen {
        zephyr,display = &nice_view;
    };
};
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk-config/config/splitkb_aurora_corne.keymap" 1






# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 1 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/key_press.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/key_press.dtsi" 2 3 4

/ {
    behaviors {

    /omit-if-no-ref/

        kp: key_press {
            compatible = "zmk,behavior-key-press";
            #binding-cells = <1>;
            display-name = "Key Press";
        };
    };
};
# 2 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/key_toggle.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/key_toggle.dtsi" 2 3 4

/ {
    behaviors {

    /omit-if-no-ref/

        kt: key_toggle {
            compatible = "zmk,behavior-key-toggle";
            #binding-cells = <1>;
            display-name = "Key Toggle";
        };
    };
};
# 3 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/transparent.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/transparent.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        trans: transparent {
            compatible = "zmk,behavior-transparent";
            #binding-cells = <0>;
            display-name = "Transparent";
        };
    };
};
# 4 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/none.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/none.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        none: none {
            compatible = "zmk,behavior-none";
            #binding-cells = <0>;
            display-name = "None";
        };
    };
};
# 5 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/mod_tap.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/mod_tap.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };
    };
};
# 6 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/layer_tap.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/layer_tap.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };
    };
};
# 7 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/gresc.dtsi" 1 3 4







# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 9 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/gresc.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/keys.h" 1 3 4





       

# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/hid_usage.h" 1 3 4
# 11 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/hid_usage.h" 3 4
       
# 9 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/keys.h" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/hid_usage_pages.h" 1 3 4
# 11 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/hid_usage_pages.h" 3 4
       
# 10 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/keys.h" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/modifiers.h" 1 3 4





       
# 11 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/keys.h" 2 3 4
# 10 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/gresc.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp (((((0x07) << 16) | (0x29))))>, <&kp ((((0x07) << 16) | (0x35)))>;
            mods = <(0x08|0x02|0x80|0x20)>;
            display-name = "Grave/Escape";
        };
    };
};
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/sticky_key.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/sticky_key.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        sk: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            release-after-ms = <1000>;
            bindings = <&kp>;
            ignore-modifiers;
            display-name = "Sticky Key";
        };

        /omit-if-no-ref/

        sl: sticky_layer {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            release-after-ms = <1000>;
            bindings = <&mo>;
            quick-release;
            display-name = "Sticky Layer";
        };
    };

};
# 9 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/momentary_layer.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/momentary_layer.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        mo: momentary_layer {
            compatible = "zmk,behavior-momentary-layer";
            #binding-cells = <1>;
            display-name = "Momentary Layer";
        };
    };
};
# 10 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/toggle_layer.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/toggle_layer.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        tog: toggle_layer {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer";
        };
    };
};
# 11 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/to_layer.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/to_layer.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        to: to_layer {
            compatible = "zmk,behavior-to-layer";
            #binding-cells = <1>;
            display-name = "To Layer";
        };
    };
};
# 12 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/reset.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/reset.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/reset.dtsi" 2 3 4

/ {
    behaviors {

        sys_reset: sysreset {
            compatible = "zmk,behavior-reset";
            #binding-cells = <0>;
            display-name = "Reset";
        };


        bootloader: bootload {
            compatible = "zmk,behavior-reset";
            type = <0x57>;
            #binding-cells = <0>;
            display-name = "Bootloader";
        };
    };
};
# 13 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/sensor_rotate_key_press.dtsi" 1 3 4






/ {
    behaviors {

        /omit-if-no-ref/ inc_dec_cp: inc_dec_kp: enc_key_press {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };
};
# 14 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/rgb_underglow.dtsi" 1 3 4






/ {
    behaviors {

        rgb_ug: rgb_ug {
            compatible = "zmk,behavior-rgb-underglow";
            #binding-cells = <2>;
            display-name = "Underglow";
        };
    };
};
# 15 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/bluetooth.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/bluetooth.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        bt: bluetooth {
            compatible = "zmk,behavior-bluetooth";
            #binding-cells = <2>;
            display-name = "Bluetooth";
        };
    };
};
# 16 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/ext_power.dtsi" 1 3 4






/ {
    behaviors {

        ext_power: extpower {
            compatible = "zmk,behavior-ext-power";
            #binding-cells = <1>;
            display-name = "External Power";
        };
    };
};
# 17 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/outputs.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/outputs.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        out: outputs {
            compatible = "zmk,behavior-outputs";
            #binding-cells = <1>;
            display-name = "Output Selection";
        };
    };
};
# 18 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/caps_word.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/caps_word.dtsi" 2 3 4


/ {
    behaviors {

        /omit-if-no-ref/

        caps_word: caps_word {
            compatible = "zmk,behavior-caps-word";
            #binding-cells = <0>;
            continue-list = <((0x02 << 24 | (((0x07) << 16) | (0x2D)))) ((((0x07) << 16) | (0x2A))) ((((0x07) << 16) | (0x4C)))>;
            display-name = "Caps Word";
        };
    };
};
# 19 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/key_repeat.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/key_repeat.dtsi" 2 3 4


/ {
    behaviors {

    /omit-if-no-ref/

        key_repeat: key_repeat {
            compatible = "zmk,behavior-key-repeat";
            #binding-cells = <0>;
            usage-pages = <(0x07)>;
            display-name = "Key Repeat";
        };
    };
};
# 20 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/backlight.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/backlight.dtsi" 2 3 4

 / {
    behaviors {

        /omit-if-no-ref/


        bl: bcklight {
            compatible = "zmk,behavior-backlight";
            #binding-cells = <2>;
            display-name = "Backlight";
        };
    };
};
# 21 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/macros.dtsi" 1 3 4
# 29 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/macros.dtsi" 3 4
/ {
    behaviors {
        macro_tap: macro_tap {
            compatible = "zmk,macro-control-mode-tap";
            #binding-cells = <0>;
        };

        macro_press: macro_press {
            compatible = "zmk,macro-control-mode-press";
            #binding-cells = <0>;
        };

        macro_release: macro_release {
            compatible = "zmk,macro-control-mode-release";
            #binding-cells = <0>;
        };

        macro_tap_time: macro_tap_time {
            compatible = "zmk,macro-control-tap-time";
            #binding-cells = <1>;
        };

        macro_wait_time: macro_wait_time {
            compatible = "zmk,macro-control-wait-time";
            #binding-cells = <1>;
        };

        macro_pause_for_release: macro_pause_for_release {
            compatible = "zmk,macro-pause-for-release";
            #binding-cells = <0>;
        };

        macro_param_1to1: macro_param_1to1 {
            compatible = "zmk,macro-param-1to1";
            #binding-cells = <0>;
        };

        macro_param_1to2: macro_param_1to2 {
            compatible = "zmk,macro-param-1to2";
            #binding-cells = <0>;
        };

        macro_param_2to1: macro_param_2to1 {
            compatible = "zmk,macro-param-2to1";
            #binding-cells = <0>;
        };

        macro_param_2to2: macro_param_2to2 {
            compatible = "zmk,macro-param-2to2";
            #binding-cells = <0>;
        };
    };
};
# 22 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/mouse_key_press.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/mouse_key_press.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        mkp: mouse_key_press {
            compatible = "zmk,behavior-mouse-key-press";
            #binding-cells = <1>;
        };
    };
};
# 23 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/soft_off.dtsi" 1 3 4






# 1 "/Users/cpoliver/code/keyboards/zmk/app/include/dt-bindings/zmk/behaviors.h" 1 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/soft_off.dtsi" 2 3 4

/ {
    behaviors {

        /omit-if-no-ref/

        soft_off: z_so_off {
            compatible = "zmk,behavior-soft-off";
            #binding-cells = <0>;
            split-peripheral-off-on-press;
        };
    };
};
# 24 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 1 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors/studio_unlock.dtsi" 1 3 4






/ {
    behaviors {
        studio_unlock: studio_unlock {
            compatible = "zmk,behavior-studio-unlock";
            #binding-cells = <0>;
            display-name = "Studio Unlock";
        };
    };
};
# 25 "/Users/cpoliver/code/keyboards/zmk/app/dts/behaviors.dtsi" 2 3 4
# 8 "/Users/cpoliver/code/keyboards/zmk-config/config/splitkb_aurora_corne.keymap" 2



&left_encoder { steps = <30>; };
&right_encoder { steps = <30>; };

/ {
    behaviors {






        th: th {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPHOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
        };
# 40 "/Users/cpoliver/code/keyboards/zmk-config/config/splitkb_aurora_corne.keymap"
        enc_num: enc_num {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_NUM";
            #sensor-binding-cells = <0>;
            bindings = <&num_inc>, <&num_dec>;
        };

        num_inc: num_inc {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_INC";
            #binding-cells = <0>;
            bindings =
                <&kp (((((0x07) << 16) | (0x27))))>,
                <&kp (((((0x07) << 16) | (0x1E))))>,
                <&kp (((((0x07) << 16) | (0x1F))))>,
                <&kp (((((0x07) << 16) | (0x20))))>,
                <&kp (((((0x07) << 16) | (0x21))))>,
                <&kp (((((0x07) << 16) | (0x22))))>,
                <&kp (((((0x07) << 16) | (0x23))))>,
                <&kp (((((0x07) << 16) | (0x24))))>,
                <&kp (((((0x07) << 16) | (0x25))))>,
                <&kp (((((0x07) << 16) | (0x26))))>;
        };

        num_dec: num_dec {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_DEC";
            #binding-cells = <0>;
            bindings =
                <&kp (((((0x07) << 16) | (0x26))))>,
                <&kp (((((0x07) << 16) | (0x25))))>,
                <&kp (((((0x07) << 16) | (0x24))))>,
                <&kp (((((0x07) << 16) | (0x23))))>,
                <&kp (((((0x07) << 16) | (0x22))))>,
                <&kp (((((0x07) << 16) | (0x21))))>,
                <&kp (((((0x07) << 16) | (0x20))))>,
                <&kp (((((0x07) << 16) | (0x1F))))>,
                <&kp (((((0x07) << 16) | (0x1E))))>,
                <&kp (((((0x07) << 16) | (0x27))))>;
        };



       hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 18 30 39 40 41 31 10 8 21 19 20 34 33 32 23 22 35 11 9>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <1 12 0 13 2 3 4 5 14 16 15 17 29 38 37 36 28 27 26 25 24>;
        };
# 122 "/Users/cpoliver/code/keyboards/zmk-config/config/splitkb_aurora_corne.keymap"
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
&th (0x04 << 24 | (0x01 << 24 | (((((0x07) << 16) | (0xE3)))))) (((((0x07) << 16) | (0x28)))) &kp ((((0x07) << 16) | (0x14))) &kp ((((0x07) << 16) | (0x1A))) &kp ((((0x07) << 16) | (0x08))) &kp ((((0x07) << 16) | (0x15))) &kp ((((0x07) << 16) | (0x17))) &kp ((((0x07) << 16) | (0x1C))) &kp ((((0x07) << 16) | (0x18))) &kp ((((0x07) << 16) | (0x0C))) &kp ((((0x07) << 16) | (0x12))) &kp ((((0x07) << 16) | (0x13))) &th (0x04 << 24 | (0x01 << 24 | (((((0x07) << 16) | (0xE3)))))) ((((0x07) << 16) | (0x35)))
&th (0x02 << 24 | (0x04 << 24 | (0x01 << 24 | (((((0x07) << 16) | (0xE3))))))) ((((0x07) << 16) | (0x29))) &hml (((((0x07) << 16) | (0xE1)))) ((((0x07) << 16) | (0x04))) &hml (((((0x07) << 16) | (0xE0)))) ((((0x07) << 16) | (0x16))) &hml (((((0x07) << 16) | (0xE2)))) ((((0x07) << 16) | (0x07))) &hml (((((0x07) << 16) | (0xE3)))) ((((0x07) << 16) | (0x09))) &kp ((((0x07) << 16) | (0x0A))) &kp ((((0x07) << 16) | (0x0B))) &hmr (((((0x07) << 16) | (0xE7)))) ((((0x07) << 16) | (0x0D))) &hmr (((((0x07) << 16) | (0xE6)))) ((((0x07) << 16) | (0x0E))) &hmr (((((0x07) << 16) | (0xE4)))) ((((0x07) << 16) | (0x0F))) &hmr (((((0x07) << 16) | (0xE5)))) (((((0x07) << 16) | (0x33)))) &hmr (0x20 << 24 | (0x10 << 24 | (0x40 << 24 | (((((0x07) << 16) | (0xE7))))))) (((((0x07) << 16) | (0x34))))
&th (0x02 << 24 | (0x04 << 24 | (((((0x07) << 16) | (0xE0)))))) ((((0x07) << 16) | (0x2A))) &kp ((((0x07) << 16) | (0x1D))) &kp ((((0x07) << 16) | (0x1B))) &kp ((((0x07) << 16) | (0x06))) &kp ((((0x07) << 16) | (0x19))) &kp ((((0x07) << 16) | (0x05))) &kp ((((0x07) << 16) | (0x11))) &kp ((((0x07) << 16) | (0x10))) &kp ((((0x07) << 16) | (0x36))) &kp (((((0x07) << 16) | (0x37)))) &th ((((0x07) << 16) | (0x31))) ((((0x07) << 16) | (0x38))) &th (0x02 << 24 | (0x04 << 24 | (((((0x07) << 16) | (0xE0)))))) (0x08 << 24 | ((((0x07) << 16) | (0x35))))
                                                              &kp ((((0x07) << 16) | 0xE8)) &lt 2 ((((0x07) << 16) | (0x2C))) &lt 6 ((((0x07) << 16) | (0x2B))) &lt 4 (((((0x07) << 16) | (0x28)))) &lt 3 ((((0x07) << 16) | (0x2A))) &kp ((((0x07) << 16) | (0x7F)))
            >;

            sensor-bindings =
                <&inc_dec_kp (0x08 << 24 | ((((0x07) << 16) | (0x2E)))) (0x08 << 24 | ((((0x07) << 16) | (0x2D))))>,
                <&inc_dec_kp (((((0x0C) << 16) | (0xE9)))) (((((0x0C) << 16) | (0xEA))))>;
        };

        nav {






            bindings = <
&trans &kp (((((0x07) << 16) | (0x1E)))) &kp (((((0x07) << 16) | (0x1F)))) &kp (((((0x07) << 16) | (0x20)))) &kp (((((0x07) << 16) | (0x21)))) &kp (((((0x07) << 16) | (0x22)))) &trans &th ((((0x07) << 16) | (0x4D))) (((((0x07) << 16) | (0x4E)))) &kp (((((0x07) << 16) | (0x52)))) &th ((((0x07) << 16) | (0x4A))) (((((0x07) << 16) | (0x4B)))) &trans &trans
&trans &hml (((((0x07) << 16) | (0xE1)))) (((((0x07) << 16) | (0x1E)))) &hml (((((0x07) << 16) | (0xE0)))) (((((0x07) << 16) | (0x1F)))) &hml (((((0x07) << 16) | (0xE2)))) (((((0x07) << 16) | (0x20)))) &hml (((((0x07) << 16) | (0xE3)))) (((((0x07) << 16) | (0x21)))) &hml (0x02 << 24 | (0x04 << 24 | (((((0x07) << 16) | (0xE0)))))) (((((0x07) << 16) | (0x22)))) &kp (0x08 << 24 | (0x02 << 24 | ((((0x07) << 16) | (0x1D))))) &kp (((((0x07) << 16) | (0x50)))) &kp (((((0x07) << 16) | (0x51)))) &kp (((((0x07) << 16) | (0x4F)))) &kp (0x08 << 24 | ((((0x07) << 16) | (0x1D)))) &trans
&trans &kp (((((0x07) << 16) | (0x23)))) &kp (((((0x07) << 16) | (0x24)))) &kp (((((0x07) << 16) | (0x25)))) &kp (((((0x07) << 16) | (0x26)))) &kp (((((0x07) << 16) | (0x27)))) &trans &th (0x08 << 24 | ((((0x07) << 16) | (0x1B)))) (0x08 << 24 | ((((0x07) << 16) | (0x06)))) &th (0x08 << 24 | ((((0x07) << 16) | (0x19)))) (0x08 << 24 | (0x02 << 24 | ((((0x07) << 16) | (0x19))))) &kp (0x08 << 24 | ((((0x07) << 16) | (0x1B)))) &trans &trans
                                      &trans &trans &trans &trans &trans &trans
            >;

            sensor-bindings =
                <&inc_dec_kp (((((0x07) << 16) | (0x4B)))) (((((0x07) << 16) | (0x4E))))>,
                <&inc_dec_kp (((((0x07) << 16) | (0x4B)))) (((((0x07) << 16) | (0x4E))))>;
        };

        num {






            bindings = <
&trans &kp (((((0x07) << 16) | (0x38)))) &kp (0x02 << 24 | (((0x02 << 24 | (((0x07) << 16) | (0x25)))))) &kp ((((0x07) << 16) | (0x2D))) &kp (0x02 << 24 | ((0x02 << 24 | (((0x07) << 16) | (0x2E))))) &kp ((0x02 << 24 | (((0x07) << 16) | (0x22)))) &kp ((0x02 << 24 | (((0x07) << 16) | (0x23)))) &th ((((0x07) << 16) | (0x85))) ((((0x07) << 16) | (0x63))) &kp ((0x02 << 24 | (((0x07) << 16) | (0x22)))) &kp (((0x02 << 24 | (((0x07) << 16) | (0x26))))) &kp (((0x02 << 24 | (((0x07) << 16) | (0x27))))) &trans
&trans &kp (((((0x07) << 16) | (0x1E)))) &kp (((((0x07) << 16) | (0x1F)))) &kp (((((0x07) << 16) | (0x20)))) &kp (((((0x07) << 16) | (0x21)))) &kp (((((0x07) << 16) | (0x22)))) &kp (((((0x07) << 16) | (0x23)))) &kp (((((0x07) << 16) | (0x24)))) &kp (((((0x07) << 16) | (0x25)))) &kp (((((0x07) << 16) | (0x26)))) &kp (((((0x07) << 16) | (0x27)))) &trans
&trans &kp (((((0x07) << 16) | (0x23)))) &kp (((((0x07) << 16) | (0x24)))) &kp (((((0x07) << 16) | (0x25)))) &kp (((((0x07) << 16) | (0x26)))) &kp (((((0x07) << 16) | (0x27)))) &kp ((((0x07) << 16) | (0x67))) &kp ((((0x07) << 16) | (0x57))) &kp ((((0x07) << 16) | (0x56))) &kp ((((0x07) << 16) | (0x55))) &kp ((((0x07) << 16) | (0x54))) &trans
                                &trans &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp (((((0x07) << 16) | (0x4F)))) (((((0x07) << 16) | (0x50))))>, <&enc_num>;
        };

        symbol {
            bindings = <
&trans &kp (0x02 << 24 | (((((0x07) << 16) | (0x1E))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x1F))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x20))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x21))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x22))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x23))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x24))))) &kp (0x02 << 24 | (((((0x07) << 16) | (0x25))))) &kp (0x04 << 24 | (((((0x07) << 16) | (0x20))))) &kp ((((0x07) << 16) | (0x35))) &trans
&trans &th (((0x02 << 24 | (((0x07) << 16) | (0x37))))) (((0x02 << 24 | (((0x07) << 16) | (0x36))))) &th ((((0x07) << 16) | (0x30))) ((((0x07) << 16) | (0x2F))) &th ((0x02 << 24 | (((0x07) << 16) | (0x30)))) ((0x02 << 24 | (((0x07) << 16) | (0x2F)))) &th ((0x02 << 24 | (((0x07) << 16) | (0x27)))) ((0x02 << 24 | (((0x07) << 16) | (0x26)))) &kp ((((0x07) << 16) | (0x2E))) &trans &kp ((((0x07) << 16) | (0x2D))) &th (((0x02 << 24 | (((0x07) << 16) | (0x2D))))) ((0x02 << 24 | (((0x07) << 16) | (0x32)))) &kp ((((0x07) << 16) | (0x2E))) &kp ((0x02 << 24 | (((0x07) << 16) | (0x31)))) &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                                                             &kp (((((0x07) << 16) | (0xE2)))) &trans &trans &trans &trans &th (0x01 << 24 | (0x02 << 24 | ((((0x07) << 16) | (0x13))))) (((((0x07) << 16) | (0x28))))
            >;

            sensor-bindings = <&inc_dec_kp (((((0x07) << 16) | (0x4F)))) (((((0x07) << 16) | (0x50))))>, <&inc_dec_kp (((((0x07) << 16) | (0x52)))) (((((0x07) << 16) | (0x51))))>;
        };
# 199 "/Users/cpoliver/code/keyboards/zmk-config/config/splitkb_aurora_corne.keymap"
        mouse {
            bindings = <
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                        &trans &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        util {
            bindings = <
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                        &trans &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        figma {
            bindings = <
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                        &trans &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        thumbs_main {
            if-layers = <2 3>;
            then-layer = <1>;
        };





    };
};
# 0 "<command-line>" 2
# 1 "/Users/cpoliver/code/keyboards/zmk/zephyr/misc/empty_file.c"
